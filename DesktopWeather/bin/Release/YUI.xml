<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YUI</name>
    </assembly>
    <members>
        <member name="T:YUI.Controls.Extension">
            <summary>
            控件扩展类
            </summary>
        </member>
        <member name="M:YUI.Controls.Extension.ShowPopUpOnControl(System.Windows.FrameworkElement,System.String,System.Double,System.Double,System.Windows.Media.Brush)">
            <summary>
            在指定控件上弹出信息
            </summary>
            <param name="control">控件</param>
            <param name="message">信息</param>
            <param name="duration">持续时间(ms)</param>
            <param name="fontSize">字体大小</param>
            <param name="foreground">字体颜色</param>
        </member>
        <member name="T:YUI.Controls.WindowHelper">
            <summary>
            窗口辅助类
            </summary>
        </member>
        <member name="F:YUI.Controls.WindowHelper.WS_CAPTION">
            <summary> 
            带有外边框和标题的windows的样式 
            </summary> 
        </member>
        <member name="F:YUI.Controls.WindowHelper.WS_EX_LAYERED">
            <summary> 
            window 扩展样式 分层显示 
            </summary> 
        </member>
        <member name="F:YUI.Controls.WindowHelper.LWA_ALPHA">
            <summary> 
            带有alpha的样式 
            </summary> 
        </member>
        <member name="F:YUI.Controls.WindowHelper.LWA_COLORKEY">
            <summary> 
            颜色设置 
            </summary> 
        </member>
        <member name="F:YUI.Controls.WindowHelper.GWL_STYLE">
            <summary> 
            window的基本样式 
            </summary> 
        </member>
        <member name="F:YUI.Controls.WindowHelper.WS_EX_TOOLWINDOW">
            <summary>
            工具窗口
            </summary>
        </member>
        <member name="M:YUI.Controls.WindowHelper.FindWindow(System.String,System.String)">
            <summary>
            返回值是拥有指定窗口类名或窗口名的窗口的句柄
            </summary>
            <param name="ClassName"></param>
            <param name="WindowName"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.WindowHelper.GetWindow(System.Runtime.InteropServices.HandleRef,System.Int32)">
            <summary>
            该函数返回与指定窗口有特定关系（如Z序或所有者）的窗口句柄。
            </summary>
            <param name="hWnd"></param>
            <param name="nCmd"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.WindowHelper.SetParent(System.IntPtr,System.IntPtr)">
            <summary>
            该函数改变某个子窗口的父窗口
            </summary>
            <param name="child"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.WindowHelper.GetDCEx(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            该函数检索指定窗口客户区域或整个屏幕的显示设备上下文环境的句柄，在随后的GDI函数中可以使用该句柄在设备上下文环境中绘图。
            </summary>
            <param name="hWnd"></param>
            <param name="hrgnClip"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.WindowHelper.SetWindowPos(System.Runtime.InteropServices.HandleRef,System.Runtime.InteropServices.HandleRef,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            该函数改变一个子窗口，弹出式窗口或顶层窗口的尺寸，位置和Z序。
            子窗口，弹出式窗口，及顶层窗口根据它们在屏幕上出现的顺序排序、顶层窗口设置的级别最高，并且被设置为Z序的第一个窗口。
            </summary>
            <param name="hWnd">窗口句柄</param>
            <param name="hWndInsertAfter"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="cx"></param>
            <param name="cy"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:YUI.Controls.WindowHelper.SetWindowPos(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)" -->
        <member name="M:YUI.Controls.WindowHelper.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            函数释放设备上下文环境（DC）供其他应用程序使用。函数的效果与设备上下文环境类型有关。它只释放公用的和设备上下文环境，对于类或私有的则无效
            </summary>
            <param name="window"></param>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.WindowHelper.SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            设置窗口位置
            </summary>
            <param name="hWnd"></param>
            <param name="hWndInsertAfter"></param>
            <param name="X"></param>
            <param name="Y"></param>
            <param name="cx"></param>
            <param name="cy"></param>
            <param name="uFlags"></param>
            <returns></returns>
        </member>
        <member name="F:YUI.Controls.WindowHelper.GWL_EXSTYLE">
            <summary> 
            window的扩展样式 
            </summary> 
        </member>
        <member name="M:YUI.Controls.WindowHelper.SetLayeredWindowAttributes(System.IntPtr,System.Int32,System.Byte,System.Int32)">
            <summary> 
            Sets the layered window attributes. 
            </summary> 
            <param name="handle">要进行操作的窗口句柄</param> 
            <param name="colorKey">RGB的值</param> 
            <param name="alpha">Alpha的值，透明度</param> 
            <param name="flags">附带参数</param> 
            <returns>true or false</returns> 
        </member>
        <member name="M:YUI.Controls.WindowHelper.SetWindowCanPenetrate(System.Windows.Window,System.Boolean)">
            <summary>
            窗口穿透
            </summary>
            <param name="w"></param>
            <param name="canPenetrate"></param>
        </member>
        <member name="M:YUI.Controls.WindowHelper.SetWindowNoBorder(System.Windows.Window,System.Boolean)">
            <summary>
            设置窗口无边框
            </summary>
            <param name="w"></param>
            <param name="isNoBorder"></param>
        </member>
        <member name="M:YUI.Controls.WindowHelper.SetWindowTransparent(System.Windows.Window)">
            <summary>
            设置窗口背景透明
            </summary>
            <param name="w"></param>
        </member>
        <member name="M:YUI.Controls.WindowHelper.SetWindowBottom(System.Windows.Window)">
            <summary>
            设置窗口到最底层
            </summary>
            <param name="window"></param>
        </member>
        <member name="M:YUI.Controls.WindowHelper.SetWindowToolWindow(System.Windows.Window)">
            <summary>
            设置窗口为工具窗口
            </summary>
            <param name="window"></param>
        </member>
        <member name="T:YUI.Controls.WindowHelper.DesktopLayer">
            <summary>
            桌面层类型
            </summary>
        </member>
        <member name="F:YUI.Controls.WindowHelper.DesktopLayer.Progman">
            <summary>
            第一层桌面
            </summary>
        </member>
        <member name="F:YUI.Controls.WindowHelper.DesktopLayer.ShellDll">
            <summary>
            第二层桌面
            </summary>
        </member>
        <member name="F:YUI.Controls.WindowHelper.DesktopLayer.FolderView">
            <summary>
            第三层桌面
            </summary>
        </member>
        <member name="M:YUI.Controls.WindowHelper.GetDesktopHandle(YUI.Controls.WindowHelper.DesktopLayer,System.Object)">
            <summary>
            获得制定类型的窗口句柄
            </summary>
            <param name="desktopLayer"></param>
            <returns></returns>
        </member>
        <member name="T:YUI.Controls.YPasswordBoxHelper">
            <summary>   
            为PasswordBox控件的Password增加绑定功能   
            </summary>   
        </member>
        <member name="T:YUI.Controls.YProgressRing">
            <summary>
            加载控件
            </summary>
        </member>
        <member name="F:YUI.Controls.YProgressRing.BindableWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:YUI.Controls.YProgressRing.IsActiveProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:YUI.Controls.YProgressRing.IsLargeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:YUI.Controls.YProgressRing.MaxSideLengthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:YUI.Controls.YProgressRing.EllipseDiameterProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:YUI.Controls.YProgressRing.EllipseOffsetProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:YUI.Controls.YProgressRing.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:YUI.Controls.YProgressRing.MaxSideLength">
            <summary>
            
            </summary>
        </member>
        <member name="P:YUI.Controls.YProgressRing.EllipseDiameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:YUI.Controls.YProgressRing.EllipseOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:YUI.Controls.YProgressRing.BindableWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:YUI.Controls.YProgressRing.IsActive">
            <summary>
            
            </summary>
        </member>
        <member name="P:YUI.Controls.YProgressRing.IsLarge">
            <summary>
            
            </summary>
        </member>
        <member name="M:YUI.Controls.YProgressRing.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="T:YUI.Controls.Alignment">
            <summary>
            上下左右 枚举
            </summary>
        </member>
        <member name="F:YUI.Controls.Alignment.Left">
            <summary>
            左
            </summary>
        </member>
        <member name="F:YUI.Controls.Alignment.Top">
            <summary>
            上
            </summary>
        </member>
        <member name="F:YUI.Controls.Alignment.Right">
            <summary>
            右
            </summary>
        </member>
        <member name="F:YUI.Controls.Alignment.Bottom">
            <summary>
            下
            </summary>
        </member>
        <member name="T:YUI.Controls.IconType">
            <summary>
            图标类型
            </summary>
        </member>
        <member name="F:YUI.Controls.IconType.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="F:YUI.Controls.IconType.Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="T:YUI.Controls.YAttachProperty">
            <summary>
            YUI通用附加属性
            </summary>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YFocusBackgroundProperty">
            <summary>
            获得焦点背景颜色附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYFocusBackground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置获得焦点背景颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYFocusBackground(System.Windows.DependencyObject)">
            <summary>
            获取获得焦点背景颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YFocusForegroundProperty">
            <summary>
            获得焦点前景颜色附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYFocusForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置获得焦点前景颜色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYFocusForeground(System.Windows.DependencyObject)">
            <summary>
            获取获得焦点前景颜色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YMouseOverBackgroundProperty">
            <summary>
            鼠标悬浮背景色附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYMouseOverBackground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置鼠标悬浮背景色附加属性
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYMouseOverBackground(System.Windows.DependencyObject)">
            <summary>
            获取鼠标悬浮背景色附加属性
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YMouseOverForegroundProperty">
            <summary>
            鼠标悬浮前景色附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYMouseOverForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置鼠标悬浮前景色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYMouseOverForeground(System.Windows.DependencyObject)">
            <summary>
            获取鼠标悬浮前景色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YFocusBorderBrushProperty">
            <summary>
            焦点边框色，输入控件附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYFocusBorderBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置焦点边框色，输入控件
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYFocusBorderBrush(System.Windows.DependencyObject)">
            <summary>
            获取焦点边框色，输入控件
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YMouseOverBorderBrushProperty">
            <summary>
            鼠标进入边框色，输入控件附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYMouseOverBorderBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置鼠标进入边框色，输入控件
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYMouseOverBorderBrush(System.Windows.DependencyObject)">
            <summary>
            获取鼠标进入边框色，输入控件
            </summary>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YPressedBackgroundProperty">
            <summary>
            鼠标按下背景色附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYPressedBackground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置鼠标按下背景色
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYPressedBackground(System.Windows.DependencyObject)">
            <summary>
            获取鼠标按下背景色
            </summary>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YPressedForegroundProperty">
            <summary>
            鼠标按下前景色附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYPressedForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置鼠标按下前景色
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYPressedForeground(System.Windows.DependencyObject)">
            <summary>
            获取鼠标按下前景色
            </summary>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YPressedBorderBrushProperty">
            <summary>
            鼠标按下前景色附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYPressedBorderBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置鼠标按下前景色
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYPressedBorderBrush(System.Windows.DependencyObject)">
            <summary>
            获取鼠标按下前景色
            </summary>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YCheckedForegroundProperty">
            <summary>
            鼠标悬浮前景色附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYCheckedForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置被选中前景色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYCheckedForeground(System.Windows.DependencyObject)">
            <summary>
            获取被选中前景色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YItemSelectedForegroundProperty">
            <summary>
            鼠标悬浮前景色附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYItemSelectedForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置被选中前景色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYItemSelectedForeground(System.Windows.DependencyObject)">
            <summary>
            获取被选中前景色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YItemSelectedBackgroundProperty">
            <summary>
            鼠标悬浮前景色附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYItemSelectedBackground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置被选中背景色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYItemSelectedBackground(System.Windows.DependencyObject)">
            <summary>
            获取被选中背景色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YItemMouseOverForegroundProperty">
            <summary>
            子选项鼠标悬浮前景色附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYItemMouseOverForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置子选项鼠标悬浮前景色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYItemMouseOverForeground(System.Windows.DependencyObject)">
            <summary>
            获取子选项鼠标悬浮前景色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YItemMouseOverBackgroundProperty">
            <summary>
            子选项鼠标悬浮背景色附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYItemMouseOverBackground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置子选项鼠标悬浮背景色
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYItemMouseOverBackground(System.Windows.DependencyObject)">
            <summary>
            获取子选项鼠标悬浮背景色
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YAttachContentProperty">
            <summary>
            附加组件模板附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYAttachContent(System.Windows.DependencyObject)">
            <summary>
            获取附加组件模板
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYAttachContent(System.Windows.DependencyObject,System.Windows.Controls.ControlTemplate)">
            <summary>
            设置附加组件模板
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YWatermarkProperty">
            <summary>
            水印附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYWatermark(System.Windows.DependencyObject)">
            <summary>
            获取水印
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYWatermark(System.Windows.DependencyObject,System.String)">
            <summary>
            设置水印
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YIconFontFamilyProperty">
            <summary>
            字体图标字体附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYIconFontFamily(System.Windows.DependencyObject)">
            <summary>
            获取字体图标字体
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYIconFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)">
            <summary>
            设置字体图标字体
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YIconProperty">
            <summary>
            字体图标附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYIcon(System.Windows.DependencyObject)">
            <summary>
            获取字体图标
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYIcon(System.Windows.DependencyObject,System.String)">
            <summary>
            设置字体图标
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YIconCheckedProperty">
            <summary>
            字体图标附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYIconChecked(System.Windows.DependencyObject)">
            <summary>
            获取字体图标
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYIconChecked(System.Windows.DependencyObject,System.String)">
            <summary>
            设置字体图标
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YIconCheckedNullProperty">
            <summary>
            字体图标附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYIconCheckedNull(System.Windows.DependencyObject)">
            <summary>
            获取字体图标
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYIconCheckedNull(System.Windows.DependencyObject,System.String)">
            <summary>
            设置字体图标
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YIconSizeProperty">
            <summary>
            字体图标大小附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYIconSize(System.Windows.DependencyObject)">
            <summary>
            获取字体图标大小
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYIconSize(System.Windows.DependencyObject,System.Double)">
            <summary>
            设置字体图标大小
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YIconMarginProperty">
            <summary>
            字体图标边距附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYIconMargin(System.Windows.DependencyObject)">
            <summary>
            获取字体图标边距
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYIconMargin(System.Windows.DependencyObject,System.Windows.Thickness)">
            <summary>
            设置字体图标边距
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YContentDecorationsProperty">
            <summary>
            内容文字修饰附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYContentDecorations(System.Windows.DependencyObject)">
            <summary>
            获取内容文字修饰
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYContentDecorations(System.Windows.DependencyObject,System.Windows.TextDecorationCollection)">
            <summary>
            设置内容文字修饰
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YAllowsAnimationProperty">
            <summary>
            允许动画附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYAllowsAnimation(System.Windows.DependencyObject)">
            <summary>
            获取允许动画
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYAllowsAnimation(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            设置允许动画
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.RotateAnimation">
            <summary>
            动画刻度
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.YAllowsAnimationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            绑定动画事件
            </summary>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YCornerRadiusProperty">
            <summary>
            Border圆角附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYCornerRadius(System.Windows.DependencyObject)">
            <summary>
            获取Border圆角
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYCornerRadius(System.Windows.DependencyObject,System.Windows.CornerRadius)">
            <summary>
            设置Border圆角
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YLabelProperty">
            <summary>
            TextBox的头部Label附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYLabel(System.Windows.DependencyObject)">
            <summary>
            获取TextBox的头部Label
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYLabel(System.Windows.DependencyObject,System.String)">
            <summary>
            设置TextBox的头部Label
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YLabelTemplateProperty">
            <summary>
            TextBox的头部Label模板附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYLabelTemplate(System.Windows.DependencyObject)">
            <summary>
            获取TextBox的头部Label模板
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYLabelTemplate(System.Windows.DependencyObject,System.Windows.Controls.ControlTemplate)">
            <summary>
            设置TextBox的头部Label模板
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YButtonIconAlignmentProperty">
            <summary>
            YButton的Icon位置附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYButtonIconAlignment(System.Windows.DependencyObject)">
            <summary>
            获取YButton的Icon位置
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYButtonIconAlignment(System.Windows.DependencyObject,YUI.Controls.Alignment)">
            <summary>
            设置YButton的Icon位置
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YButtonIconTypeProperty">
            <summary>
            YButton的Icon位置附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYButtonIconType(System.Windows.DependencyObject)">
            <summary>
            获取YButton的Icon类型
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYButtonIconType(System.Windows.DependencyObject,YUI.Controls.IconType)">
            <summary>
            设置YButton的Icon类型
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YImageSourceProperty">
            <summary>
            YButton的Icon位置附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYImageSource(System.Windows.DependencyObject)">
            <summary>
            获取YButton图片
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYImageSource(System.Windows.DependencyObject,System.Windows.Media.ImageSource)">
            <summary>
            设置YButton图片
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YStretchProperty">
            <summary>
            YButton的Icon位置附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYStretch(System.Windows.DependencyObject)">
            <summary>
            获取YButton图片
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYStretch(System.Windows.DependencyObject,System.Windows.Media.Stretch)">
            <summary>
            设置YButton图片
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YTextTrimmingProperty">
            <summary>
            裁剪文本附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYTextTrimming(System.Windows.DependencyObject)">
            <summary>
            获取裁剪文本
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYTextTrimming(System.Windows.DependencyObject,System.Windows.TextTrimming)">
            <summary>
            设置裁剪文本
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YTextAlignmentProperty">
            <summary>
            裁剪文本附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYTextAlignment(System.Windows.DependencyObject)">
            <summary>
            获取裁剪文本
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYTextAlignment(System.Windows.DependencyObject,System.Windows.HorizontalAlignment)">
            <summary>
            设置裁剪文本
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YMenuPopupBackgroundProperty">
            <summary>
            YMenu弹出菜单背景色附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYMenuPopupBackground(System.Windows.DependencyObject)">
            <summary>
            获取YMenu弹出菜单背景色
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYMenuPopupBackground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置YMenu弹出菜单背景色
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YMenuPopupBorderBrushProperty">
            <summary>
            YMenu弹出菜单BorderBrush附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYMenuPopupBorderBrush(System.Windows.DependencyObject)">
            <summary>
            获取YMenu弹出菜单BorderBrush
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYMenuPopupBorderBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            设置YMenu弹出菜单BorderBrush
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YMenuPopupBorderThicknessProperty">
            <summary>
            YMenu弹出菜单BorderThickness附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYMenuPopupBorderThickness(System.Windows.DependencyObject)">
            <summary>
            获取YMenu弹出菜单BorderThickness
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYMenuPopupBorderThickness(System.Windows.DependencyObject,System.Windows.Thickness)">
            <summary>
            设置YMenu弹出菜单BorderThickness
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.YMenuPopupCornerRadiusProperty">
            <summary>
            YMenu弹出菜单BorderThickness附加属性
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.GetYMenuPopupCornerRadius(System.Windows.DependencyObject)">
            <summary>
            获取YMenu弹出菜单BorderThickness
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SetYMenuPopupCornerRadius(System.Windows.DependencyObject,System.Windows.CornerRadius)">
            <summary>
            设置YMenu弹出菜单BorderThickness
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.IsClearTextButtonBehaviorEnabledProperty">
            <summary>
            清除输入框Text值按钮行为开关
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.IsClearTextButtonBehaviorEnabledChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            绑定清除Text操作的按钮事件
            </summary>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.IsOpenFileButtonBehaviorEnabledProperty">
            <summary>
            选择文件命令行为开关
            </summary>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.IsOpenFolderButtonBehaviorEnabledProperty">
            <summary>
            选择文件夹命令行为开关
            </summary>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.IsSaveFileButtonBehaviorEnabledProperty">
            <summary>
            选择文件保存路径及名称
            </summary>
        </member>
        <member name="P:YUI.Controls.YAttachProperty.ClearTextCommand">
            <summary>
            清除输入框Text事件命令，需要使用IsClearTextButtonBehaviorEnabledChanged绑定命令
            </summary>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.ClearTextCommandBinding">
            <summary>
            ClearTextCommand绑定事件
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.ClearButtonClick(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            清除输入框文本值
            </summary>
        </member>
        <member name="P:YUI.Controls.YAttachProperty.OpenFileCommand">
            <summary>
            选择文件命令，需要使用IsClearTextButtonBehaviorEnabledChanged绑定命令
            </summary>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.OpenFileCommandBinding">
            <summary>
            OpenFileCommand绑定事件
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.OpenFileButtonClick(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            执行OpenFileCommand
            </summary>
        </member>
        <member name="P:YUI.Controls.YAttachProperty.OpenFolderCommand">
            <summary>
            选择文件夹命令
            </summary>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.OpenFolderCommandBinding">
            <summary>
            OpenFolderCommand绑定事件
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.OpenFolderButtonClick(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            执行OpenFolderCommand
            </summary>
        </member>
        <member name="P:YUI.Controls.YAttachProperty.SaveFileCommand">
            <summary>
            选择文件保存路径及名称
            </summary>
        </member>
        <member name="F:YUI.Controls.YAttachProperty.SaveFileCommandBinding">
            <summary>
            SaveFileCommand绑定事件
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.SaveFileButtonClick(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            执行OpenFileCommand
            </summary>
        </member>
        <member name="M:YUI.Controls.YAttachProperty.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="T:YUI.Converters.YPercentToAngleConverter">
            <summary>
            百分比转换为角度值
            </summary>
        </member>
        <member name="T:YUI.Converters.YBoolToVisibilityConverter">
            <summary>
            bool转换成Visibility
            </summary>
        </member>
        <member name="T:YUI.Converters.YConverters">
            <summary>
            
            </summary>
        </member>
        <member name="P:YUI.Converters.YConverters.YTrueToFalseConverter">
            <summary>
            true和false对调转换
            </summary>
        </member>
        <member name="P:YUI.Converters.YConverters.YBoolToVisibilityConverter">
            <summary>
            Bool转换成Visibility
            </summary>
        </member>
        <member name="P:YUI.Converters.YConverters.YVisibilityToBoolConverter">
            <summary>
            Visibility转换成Bool
            </summary>
        </member>
        <member name="P:YUI.Converters.YConverters.YPercentToAngleConverter">
            <summary>
            百分比转换成角度
            </summary>
        </member>
        <member name="P:YUI.Converters.YConverters.YThicknessToDoubleConverter">
            <summary>
            获取Thickness固定值double
            </summary>
        </member>
        <member name="P:YUI.Converters.YConverters.YStringToVisibilitiyConverter">
            <summary>
            字符串装换成Visibility
            </summary>
        </member>
        <member name="T:YUI.Converters.YStringToVisibilitiyConverter">
            <summary>
            字符串转换显示（字符串为空或null 不显示）
            </summary>
        </member>
        <member name="T:YUI.Converters.YThicknessToDoubleConverter">
            <summary>
            获取Thickness固定值double
            </summary>
        </member>
        <member name="T:YUI.Converters.YTrueToFalseConverter">
            <summary>
            True和False对调转换
            </summary>
        </member>
        <member name="T:YUI.Converters.YVisibilityToBoolConverter">
            <summary>
            Visibility转换成Bool
            </summary>
        </member>
        <member name="T:YUI.Properties.Resources">
            <summary>
              强类型资源类，用于查找本地化字符串等。
            </summary>
        </member>
        <member name="P:YUI.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:YUI.Properties.Resources.Culture">
            <summary>
              覆盖当前线程的 CurrentUICulture 属性
              使用此强类型的资源类的资源查找。
            </summary>
        </member>
        <member name="T:YUI.Util.ApplicationHelper">
            <summary>
            应用程序帮助类
            </summary>
        </member>
        <member name="T:YUI.Util.ControlHelper">
            <summary>
            控件帮助类
            </summary>
        </member>
        <member name="M:YUI.Util.ControlHelper.BindCommand(System.Windows.UIElement,System.Windows.Input.ICommand,System.Action{System.Object,System.Windows.Input.ExecutedRoutedEventArgs})">
            <summary>
            绑定命令和命令事件到宿主UI
            </summary>
        </member>
        <member name="M:YUI.Util.ControlHelper.BindCommand(System.Windows.UIElement,System.Windows.Input.ICommand)">
            <summary>
            绑定RelayCommand命令到宿主UI
            </summary>
        </member>
        <member name="M:YUI.Util.Images.CreateThumbnail(System.IO.Stream,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            创建缩略图
            </summary>
            <param name="fileStream"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="penColor"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Util.Images.CreateThumbnail(System.String,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            创建缩略图
            </summary>
            <param name="fileName"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="penColor"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Util.Images.CreateThumbnail(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            创建缩略图
            </summary>
            <param name="image"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="penColor"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Util.Images.CreateThumbnail(System.Drawing.Bitmap,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            创建缩略图
            </summary>
            <param name="bitmap"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="penColor"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Util.Images.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.Single)">
            <summary>
            绘制图片
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="img"></param>
            <param name="opacity"></param>
        </member>
        <member name="M:YUI.Util.Images.CreateImageSourceThumbnia(System.String,System.Double,System.Double)">
            <summary>
            创建ImageSource缩略图
            </summary>
            <param name="fileName"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Util.Images.CreateImageSourceThumbnia(System.Drawing.Image,System.Double,System.Double)">
            <summary>
            创建ImageSource缩略图
            </summary>
            <param name="sourceImage"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Util.Images.CreateImageSourceFromImage(System.Drawing.Bitmap)">
            <summary>
            从Bitemap创建ImageSource
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:YUI.Util.Images.CreatImageSourceFromFile(System.String)">
            <summary>
            从文件读取ImageSource
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:YUI.Common.Singleton`1">
            <summary>
            单例模式
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:YUI.Common.Singleton`1.GetInstance">
            <summary>
            获取单例模式
            </summary>
            <returns></returns>
        </member>
        <member name="T:System.NotifyPropertyChangedBase">
            <summary>
            实现了属性更改通知的基类
            </summary>
        </member>
        <member name="M:System.NotifyPropertyChangedBase.UpdateProperty(System.String)">
            <summary>
            属性值变化时发生
            </summary>
            <param name="propertyName">属性名称</param>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
